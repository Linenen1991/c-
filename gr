#!/usr/bin/sh
cmd='git grep -lP'
fcmd=''
gcmd='git grep -P -A 3 -B 3'
space=' '

# In command line
# "git grep "Color\\\\"" for search "Color\"
# "git grep "\\\vNew" or "\\\\vNew" for search "\vNew"
# "git grep -P "Color\\\\\w" for search "Color\A"
# "git grep -P '\\v'" for search "\v", but '\\\v' can't search this.
for i; do
    # arg="${i//\/\\}"
    arg=$(printf "%q" "$i")
    fcmd=$cmd$space'"'$arg'" | xargs.exe -r '$fcmd
    gcmd=$gcmd" -e \""$arg"\" --or"
done
# fcmd=${fcmd/% | xargs.exe -r /}
gcmd=${gcmd/%--or/}
printf "%s\n" "$fcmd"
printf "%s\n" "$gcmd"

bash -c "$fcmd $gcmd"
exit;

#
# please use single quote e.g. 'Pattern'
# If need backslash in pattern, use backslash to escape. 'Color\' -> 'Color\\'
#git grep -iP --files-with-matches "$1" | xargs.exe git grep -iP --files-with-matches "$2" | xargs.exe git grep -iP -e "$2" --or -e "$1"
#exit;

# Check last char is backslash, then escape. "Color" -> "Color", "Color\\" -> "Color\\"
string=$1
arg1="${string/%\\/\\\\}"
string=$2
arg2="${string/%\\/\\\\}"
git grep -iP --files-with-matches "$arg1" | xargs.exe -r git grep -iP --files-with-matches "$arg2" | xargs.exe -r git grep -iP -e "$arg1" --or -e "$arg2"
exit;

# "using\sSystem" -> "using\\sSystem"
string=$1
arg1="${string/\\/\\\\}";
string=$2
arg2="${string/\\/\\\\}"
git grep -iP --files-with-matches "$arg1" | xargs.exe git grep -iP --files-with-matches "$arg2" | xargs.exe git grep -iP -e "$arg1" --or -e "$arg2"
